
Atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000200  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000008cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000951  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000003a  00000000  00000000  00000971  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000ac  00000000  00000000  000009ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000063  00000000  00000000  00000a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000180  00000000  00000000  00000aba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00000c3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000af  00000000  00000000  00000c7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000d2b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_9>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_11>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 16000000UL
#include <util/delay.h>
#include <avr/interrupt.h>

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRB |= 0x82;
  74:	87 e3       	ldi	r24, 0x37	; 55
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	27 e3       	ldi	r18, 0x37	; 55
  7a:	30 e0       	ldi	r19, 0x00	; 0
  7c:	f9 01       	movw	r30, r18
  7e:	20 81       	ld	r18, Z
  80:	22 68       	ori	r18, 0x82	; 130
  82:	fc 01       	movw	r30, r24
  84:	20 83       	st	Z, r18
	DDRC = 0x00;
  86:	84 e3       	ldi	r24, 0x34	; 52
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	fc 01       	movw	r30, r24
  8c:	10 82       	st	Z, r1
	DDRD = 0xFF;
  8e:	81 e3       	ldi	r24, 0x31	; 49
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	2f ef       	ldi	r18, 0xFF	; 255
  94:	fc 01       	movw	r30, r24
  96:	20 83       	st	Z, r18
	
	TCNT0 = -160;
  98:	82 e5       	ldi	r24, 0x52	; 82
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	20 e6       	ldi	r18, 0x60	; 96
  9e:	fc 01       	movw	r30, r24
  a0:	20 83       	st	Z, r18
	TCCR0 = 0x01;
  a2:	83 e5       	ldi	r24, 0x53	; 83
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	fc 01       	movw	r30, r24
  aa:	20 83       	st	Z, r18
	TCNT1H = (-640)>>8;
  ac:	8d e4       	ldi	r24, 0x4D	; 77
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	2d ef       	ldi	r18, 0xFD	; 253
  b2:	fc 01       	movw	r30, r24
  b4:	20 83       	st	Z, r18
	TCNT1L = -640;
  b6:	8c e4       	ldi	r24, 0x4C	; 76
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	20 e8       	ldi	r18, 0x80	; 128
  bc:	fc 01       	movw	r30, r24
  be:	20 83       	st	Z, r18
	TCCR1A = 0x00;
  c0:	8f e4       	ldi	r24, 0x4F	; 79
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	fc 01       	movw	r30, r24
  c6:	10 82       	st	Z, r1
	TCCR1B = 0x01;
  c8:	8e e4       	ldi	r24, 0x4E	; 78
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	21 e0       	ldi	r18, 0x01	; 1
  ce:	fc 01       	movw	r30, r24
  d0:	20 83       	st	Z, r18
	TIMSK = (1<<TOIE0)|(1<<TOIE1);
  d2:	89 e5       	ldi	r24, 0x59	; 89
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	25 e0       	ldi	r18, 0x05	; 5
  d8:	fc 01       	movw	r30, r24
  da:	20 83       	st	Z, r18
	sei();
  dc:	78 94       	sei
    while(1)
    {
        PORTD = PINC;
  de:	82 e3       	ldi	r24, 0x32	; 50
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	23 e3       	ldi	r18, 0x33	; 51
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	f9 01       	movw	r30, r18
  e8:	20 81       	ld	r18, Z
  ea:	fc 01       	movw	r30, r24
  ec:	20 83       	st	Z, r18
    }
  ee:	f7 cf       	rjmp	.-18     	; 0xde <main+0x72>

000000f0 <__vector_11>:
}

ISR (TIMER0_OVF_vect)
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	2f 93       	push	r18
  fc:	3f 93       	push	r19
  fe:	8f 93       	push	r24
 100:	9f 93       	push	r25
 102:	ef 93       	push	r30
 104:	ff 93       	push	r31
 106:	df 93       	push	r29
 108:	cf 93       	push	r28
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
	TCNT0 = -160;
 10e:	82 e5       	ldi	r24, 0x52	; 82
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	20 e6       	ldi	r18, 0x60	; 96
 114:	fc 01       	movw	r30, r24
 116:	20 83       	st	Z, r18
	PORTB ^= 1<<PINB0;
 118:	88 e3       	ldi	r24, 0x38	; 56
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	28 e3       	ldi	r18, 0x38	; 56
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	f9 01       	movw	r30, r18
 122:	30 81       	ld	r19, Z
 124:	21 e0       	ldi	r18, 0x01	; 1
 126:	23 27       	eor	r18, r19
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18
}
 12c:	cf 91       	pop	r28
 12e:	df 91       	pop	r29
 130:	ff 91       	pop	r31
 132:	ef 91       	pop	r30
 134:	9f 91       	pop	r25
 136:	8f 91       	pop	r24
 138:	3f 91       	pop	r19
 13a:	2f 91       	pop	r18
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <__vector_9>:

ISR (TIMER1_OVF_vect)
{
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	2f 93       	push	r18
 152:	3f 93       	push	r19
 154:	8f 93       	push	r24
 156:	9f 93       	push	r25
 158:	ef 93       	push	r30
 15a:	ff 93       	push	r31
 15c:	df 93       	push	r29
 15e:	cf 93       	push	r28
 160:	cd b7       	in	r28, 0x3d	; 61
 162:	de b7       	in	r29, 0x3e	; 62
	TCNT1H = (-640)>>8;
 164:	8d e4       	ldi	r24, 0x4D	; 77
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	2d ef       	ldi	r18, 0xFD	; 253
 16a:	fc 01       	movw	r30, r24
 16c:	20 83       	st	Z, r18
	TCNT1L = -640;
 16e:	8c e4       	ldi	r24, 0x4C	; 76
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	20 e8       	ldi	r18, 0x80	; 128
 174:	fc 01       	movw	r30, r24
 176:	20 83       	st	Z, r18
	PORTB ^= 1<<PINB7;
 178:	88 e3       	ldi	r24, 0x38	; 56
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	28 e3       	ldi	r18, 0x38	; 56
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	f9 01       	movw	r30, r18
 182:	30 81       	ld	r19, Z
 184:	20 e8       	ldi	r18, 0x80	; 128
 186:	23 27       	eor	r18, r19
 188:	fc 01       	movw	r30, r24
 18a:	20 83       	st	Z, r18
 18c:	cf 91       	pop	r28
 18e:	df 91       	pop	r29
 190:	ff 91       	pop	r31
 192:	ef 91       	pop	r30
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	3f 91       	pop	r19
 19a:	2f 91       	pop	r18
 19c:	0f 90       	pop	r0
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	0f 90       	pop	r0
 1a2:	1f 90       	pop	r1
 1a4:	18 95       	reti

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
