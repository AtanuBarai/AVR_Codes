
atmega8_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000098  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000000ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  0000083d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  0000085d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000216  00000000  00000000  00000878  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000106  00000000  00000000  00000a8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001cc  00000000  00000000  00000b94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000d60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000f2  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00000038  00000000  00000000  00000e72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	2f c0       	rjmp	.+94     	; 0x94 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#define F_CPU 8000000UL
#include <avr/io.h>
#include <util/delay.h>
int main(void)
{
	DDRD = 0xFF;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	81 bb       	out	0x11, r24	; 17
    while(1)
    {
		PORTD = 0xFF;
  3c:	2f ef       	ldi	r18, 0xFF	; 255
		_delay_ms(2000);
		PORTD = 0xAA;
  3e:	9a ea       	ldi	r25, 0xAA	; 170
		_delay_ms(2000);
		PORTD = 0x55;
  40:	85 e5       	ldi	r24, 0x55	; 85
int main(void)
{
	DDRD = 0xFF;
    while(1)
    {
		PORTD = 0xFF;
  42:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  44:	4f ef       	ldi	r20, 0xFF	; 255
  46:	53 ed       	ldi	r21, 0xD3	; 211
  48:	60 e3       	ldi	r22, 0x30	; 48
  4a:	41 50       	subi	r20, 0x01	; 1
  4c:	50 40       	sbci	r21, 0x00	; 0
  4e:	60 40       	sbci	r22, 0x00	; 0
  50:	e1 f7       	brne	.-8      	; 0x4a <__SREG__+0xb>
  52:	00 c0       	rjmp	.+0      	; 0x54 <__SREG__+0x15>
  54:	00 00       	nop
		_delay_ms(2000);
		PORTD = 0xAA;
  56:	92 bb       	out	0x12, r25	; 18
  58:	4f ef       	ldi	r20, 0xFF	; 255
  5a:	53 ed       	ldi	r21, 0xD3	; 211
  5c:	60 e3       	ldi	r22, 0x30	; 48
  5e:	41 50       	subi	r20, 0x01	; 1
  60:	50 40       	sbci	r21, 0x00	; 0
  62:	60 40       	sbci	r22, 0x00	; 0
  64:	e1 f7       	brne	.-8      	; 0x5e <__SREG__+0x1f>
  66:	00 c0       	rjmp	.+0      	; 0x68 <__SREG__+0x29>
  68:	00 00       	nop
		_delay_ms(2000);
		PORTD = 0x55;
  6a:	82 bb       	out	0x12, r24	; 18
  6c:	4f ef       	ldi	r20, 0xFF	; 255
  6e:	53 ed       	ldi	r21, 0xD3	; 211
  70:	60 e3       	ldi	r22, 0x30	; 48
  72:	41 50       	subi	r20, 0x01	; 1
  74:	50 40       	sbci	r21, 0x00	; 0
  76:	60 40       	sbci	r22, 0x00	; 0
  78:	e1 f7       	brne	.-8      	; 0x72 <__SREG__+0x33>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <__SREG__+0x3d>
  7c:	00 00       	nop
		_delay_ms(2000);
		PORTD = 0x00;
  7e:	12 ba       	out	0x12, r1	; 18
  80:	4f ef       	ldi	r20, 0xFF	; 255
  82:	53 ed       	ldi	r21, 0xD3	; 211
  84:	60 e3       	ldi	r22, 0x30	; 48
  86:	41 50       	subi	r20, 0x01	; 1
  88:	50 40       	sbci	r21, 0x00	; 0
  8a:	60 40       	sbci	r22, 0x00	; 0
  8c:	e1 f7       	brne	.-8      	; 0x86 <__SREG__+0x47>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <__SREG__+0x51>
  90:	00 00       	nop
  92:	d7 cf       	rjmp	.-82     	; 0x42 <__SREG__+0x3>

00000094 <_exit>:
  94:	f8 94       	cli

00000096 <__stop_program>:
  96:	ff cf       	rjmp	.-2      	; 0x96 <__stop_program>
